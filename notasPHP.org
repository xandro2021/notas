#+title: Notas Php


* Iniciar servidor de desarrollo
#+begin_src bash
php -S localhost:3000
#+end_src

* Imprimir Consola
#+begin_src php
print "texto";
echo "texto";
var_dump("variable");
#+end_src

* Incluir archivos
** Include
Estoy agregando el archivo de header y footer al archivo de php actual
#+begin_src php
<?php include "includes/header.php";
echo "Mi codigo de archivo actual"
include "includes/footer.php";
#+end_src

* Variables
#+begin_src php
$saludo = "hola";
#+end_src

* Constantes
#+begin_src php
define("MICONSTANTE", "Este es el valor de la constante");
const constantePI = 3.14;
#+end_src

* Tipos de datos
** Boleanos
#+begin_src php
$logueado = true;
var_dump($logueado);
#+end_src
** Enteros
#+begin_src php
$numero = 300;
var_dump($numero);
#+end_src

** Floats
#+begin_src php
$float = 300.23;
var_dump($float);
#+end_src

** Strings
#+begin_src php
$nombre = "Juan";
var_dump($nombre);
#+end_src
** Arreglos
#+begin_src php
$array = [];
var_dump($array);
#+end_src

* Operadores aritmeticos y Comparacion
Igual a los de Javascript con excepcion a <=>
El resultado de var_dump va a ser -1 si el de la izquierda es menor, cero si son iguales, y 1 si izquierda es mayor
#+begin_src php
var_dump($numero1 <=> $numero2);
#+end_src

* Incremento y decrementos
Es igual a los de javascript

* Funciones
#+begin_src php
$nombreCliente = "Marco";
strlen($nombreCliente);
trim($nombreCliente);
strtoupper($nombreCliente);
strtolower($nombreCliente);
str_replace("Juan", "J", $nombreCliente);
strpos($nombreCliente, "Juan");
#+end_src

* Concatenar
String + Variable
#+begin_src php
$nombreCliente = "Ronaldo";
$tipoCliente = "Premium";
echo "El Cliente ".$nombreCliente." es ".$tipoCliente;
echo "El Cliente {$nombreCliente} es {$tipoCliente}";
#+end_src

* Arreglos
** Crear Arreglo
#+begin_src php
$carrito = ["Tablet", "Television", "Computadora"];
$clientes = array("Cliente 1", "Cliente 2", "Cliente 3");
#+end_src
** Leer todos los elementos del arreglo
#+begin_src php
echo "<pre>";
var_dump($carrito);
echo "<pre>";
#+end_src
** Leer elemento del arreglo
#+begin_src php
var_dump($carrito[1]);
#+end_src
** Agregar/Actualizar elemento al arreglo con Indice
+ Como en JS si existe lo actualiza, sino lo agrega
#+begin_src php
$carrito[3] = "Nuevo Producto";
#+end_src
** Agregar elementos
*** Al Final
#+begin_src php
array_push($carrito, "Audifonos");
#+end_src
*** Al Inicio
#+begin_src php
array_unshift($carrito, "Smart Watch");
#+end_src

* Arreglo Asociativo
#+begin_src php
$cliente = [
    "nombre" => "Juan",
    "saldo" => 200,
    "informacion" => [
        "tipo" => "premium"
    ]
];

echo $cliente["nombre"];
echo $cliente["informacion"]["tipo"];
#+end_src

* Funciones predifinidas arreglos
** Empty
Si el arreglo tiene informacion
#+begin_src php
$clientes = array();
empty($clientes);
#+end_src
** Isset
Si el arreglo existe o una propiedad esta definida en un arreglo asociativo
#+begin_src php
$cliente = [
    "nombre" => "Marco",
    "edad" => 30
];

echo "<pre>";
var_dump(isset($cliente));
var_dump(isset($cliente["nombre"]));
echo "<pre>";
#+end_src

* Array Methods
** Contiene elemento
#+begin_src php
$carrito = ["Tablet", "Computadora", "Television"];
in_array("Tablet", $carrito);
#+end_src
** Ordenar arreglos
+ sort -> ordena de menor a mayor
+ rsort -> de mayor a menor
#+begin_src php
$numeros = array(5,2,56,1,6,22,1,13,54,6,3,2);
sort($numeros);
rsort($numeros);
#+end_src
** Ordenar arreglos asociativos
+ Las variantes con r se debe a reverse
*** Values
#+begin_src php
$cliente = array (
    "saldo" => 100,
    "tipo" => "premium",
    "nombre" => "Juan"
);

asort($cliente);
arsort($cliente);
#+end_src
*** Keys
#+begin_src php
ksort($cliente);
krsort($cliente);
#+end_src
